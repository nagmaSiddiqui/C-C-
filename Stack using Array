#include<iostream>
#include<stack>
using namespace std;

class Stack{
    public:
    int *arr;
    int top;
    int size;

    // behavior
    Stack(int size){
        this->size=size;
        arr=new int[size];
        top=-1;
    }
    void push(int element){
if(size-top>1){
    top++;
    arr[top]=element;
}else{
   cout<<"stack overflow"<<endl; 
}
    }
    void pop(){
if(top >=0){
    top--;
}else{
    cout<<"stack underflow"<<endl;
}
    }
    int peek(){
        if(top>=0 ){
            return arr[top];
        }else{
            cout<<"stack is empty"<<endl;
            return -1;
        }

    }
    bool isEmpty(){
        if(top==-1){
            return true;
        }else{
            return false;
        }

    }
};
int main(){

    Stack st(5);
    st.push(22);
    st.push(43);
    st.push(44);

    cout<<st.peek()<<endl;
    st.pop();
    cout<<st.peek()<<endl;

//       stack<int>s;
//       s.push(3);
//       s.push(4);
//       s.pop();

// cout<<s.top()<<endl;
//  if(s.empty()){
//     cout<<"stack is empty"<<endl;
//  } 
//  else{
//     cout<<"stack is not empty"<<endl;
//  } 
//  cout<<"size of stack:"<<s.size()<<endl; 
    return 0;

}
